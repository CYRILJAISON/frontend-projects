{"ast":null,"code":"var _jsxFileName = \"/Users/cyriljaison/Desktop/Task/Kanban/Task/src/Home/Dashboard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Board from \"../Components/Board/Board\";\nimport \"./Dashboard.css\";\nimport CustomInput from \"../Components/CustomInput/CustomInput\";\nimport { fetchBoardList, updateLocalStorageBoards } from \"../Helper/APILayers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Dashboard() {\n  _s();\n\n  const [boards, setBoards] = useState([]);\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  async function fetchData() {\n    const boards = await fetchBoardList();\n    setBoards(boards);\n  }\n\n  const [targetCard, setTargetCard] = useState({\n    boardId: 0,\n    cardId: 0\n  });\n\n  const addboardHandler = name => {\n    const tempBoardsList = [...boards];\n    tempBoardsList.push({\n      id: Date.now() + Math.random() * 2,\n      title: name,\n      cards: []\n    });\n    setBoards(tempBoardsList);\n  };\n\n  const removeBoard = boardId => {\n    const boardIndex = boards.findIndex(item => item.id === boardId);\n    if (boardIndex < 0) return;\n    const tempBoardsList = [...boards];\n    tempBoardsList.splice(boardIndex, 1);\n    setBoards(tempBoardsList);\n  };\n\n  const addCardHandler = (boardId, title) => {\n    const boardIndex = boards.findIndex(item => item.id === boardId);\n    if (boardIndex < 0) return;\n    const tempBoardsList = [...boards];\n    tempBoardsList[boardIndex].cards.push({\n      id: Date.now() + Math.random() * 2,\n      title,\n      labels: [],\n      date: \"\",\n      tasks: [],\n      desc: \"\"\n    });\n    setBoards(tempBoardsList);\n  };\n\n  const removeCard = (boardId, cardId) => {\n    const boardIndex = boards.findIndex(item => item.id === boardId);\n    if (boardIndex < 0) return;\n    const tempBoardsList = [...boards];\n    const cards = tempBoardsList[boardIndex].cards;\n    const cardIndex = cards.findIndex(item => item.id === cardId);\n    if (cardIndex < 0) return;\n    cards.splice(cardIndex, 1);\n    setBoards(tempBoardsList);\n  };\n\n  const updateCard = (boardId, cardId, card) => {\n    const boardIndex = boards.findIndex(item => item.id === boardId);\n    if (boardIndex < 0) return;\n    const tempBoardsList = [...boards];\n    const cards = tempBoardsList[boardIndex].cards;\n    const cardIndex = cards.findIndex(item => item.id === cardId);\n    if (cardIndex < 0) return;\n    tempBoardsList[boardIndex].cards[cardIndex] = card;\n    setBoards(tempBoardsList);\n  };\n\n  const onDragEnd = (boardId, cardId) => {\n    var _boards$sourceBoardIn, _boards$sourceBoardIn2, _boards$targetBoardIn, _boards$targetBoardIn2;\n\n    const sourceBoardIndex = boards.findIndex(item => item.id === boardId);\n    if (sourceBoardIndex < 0) return;\n    const sourceCardIndex = (_boards$sourceBoardIn = boards[sourceBoardIndex]) === null || _boards$sourceBoardIn === void 0 ? void 0 : (_boards$sourceBoardIn2 = _boards$sourceBoardIn.cards) === null || _boards$sourceBoardIn2 === void 0 ? void 0 : _boards$sourceBoardIn2.findIndex(item => item.id === cardId);\n    if (sourceCardIndex < 0) return;\n    const targetBoardIndex = boards.findIndex(item => item.id === targetCard.boardId);\n    if (targetBoardIndex < 0) return;\n    const targetCardIndex = (_boards$targetBoardIn = boards[targetBoardIndex]) === null || _boards$targetBoardIn === void 0 ? void 0 : (_boards$targetBoardIn2 = _boards$targetBoardIn.cards) === null || _boards$targetBoardIn2 === void 0 ? void 0 : _boards$targetBoardIn2.findIndex(item => item.id === targetCard.cardId);\n    if (targetCardIndex < 0) return;\n    const tempBoardsList = [...boards];\n    const sourceCard = tempBoardsList[sourceBoardIndex].cards[sourceCardIndex];\n    tempBoardsList[sourceBoardIndex].cards.splice(sourceCardIndex, 1);\n    tempBoardsList[targetBoardIndex].cards.splice(targetCardIndex, 0, sourceCard);\n    setBoards(tempBoardsList);\n    setTargetCard({\n      boardId: 0,\n      cardId: 0\n    });\n  };\n\n  const onDragEnter = (boardId, cardId) => {\n    if (targetCard.cardId === cardId) return;\n    setTargetCard({\n      boardId: boardId,\n      cardId: cardId\n    });\n  };\n\n  useEffect(() => {\n    updateLocalStorageBoards(boards);\n  }, [boards]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-nav\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Trello Kanban Board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-boards-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-boards\",\n        children: [boards.map(item => /*#__PURE__*/_jsxDEV(Board, {\n          board: item,\n          addCard: addCardHandler,\n          removeBoard: () => removeBoard(item.id),\n          removeCard: removeCard,\n          onDragEnd: onDragEnd,\n          onDragEnter: onDragEnter,\n          updateCard: updateCard\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app-boards-last\",\n          children: /*#__PURE__*/_jsxDEV(CustomInput, {\n            displayClass: \"app-boards-add-board\",\n            editClass: \"app-boards-add-board-edit\",\n            placeholder: \"Enter Board Name\",\n            text: \"Add Board\",\n            buttonText: \"Add Board\",\n            onSubmit: addboardHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"4WJH1vWdj7SbSWA6Gl3QP/gEYr0=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","Board","CustomInput","fetchBoardList","updateLocalStorageBoards","Dashboard","boards","setBoards","fetchData","targetCard","setTargetCard","boardId","cardId","addboardHandler","name","tempBoardsList","push","id","Date","now","Math","random","title","cards","removeBoard","boardIndex","findIndex","item","splice","addCardHandler","labels","date","tasks","desc","removeCard","cardIndex","updateCard","card","onDragEnd","sourceBoardIndex","sourceCardIndex","targetBoardIndex","targetCardIndex","sourceCard","onDragEnter","map"],"sources":["/Users/cyriljaison/Desktop/Task/Kanban/Task/src/Home/Dashboard.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Board from \"../Components/Board/Board\";\nimport \"./Dashboard.css\";\nimport CustomInput from \"../Components/CustomInput/CustomInput\";\nimport { ICard, IBoard } from \"../Interfaces/Kanban\";\nimport { fetchBoardList, updateLocalStorageBoards } from \"../Helper/APILayers\";\n\nfunction Dashboard() {\n  const [boards, setBoards] = useState<IBoard[]>([]);\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  async function fetchData() {\n    const boards: IBoard[] = await fetchBoardList();\n    setBoards(boards);\n  }\n  const [targetCard, setTargetCard] = useState({\n    boardId: 0,\n    cardId: 0,\n  });\n\n  const addboardHandler = (name: string) => {\n    const tempBoardsList = [...boards];\n    tempBoardsList.push({\n      id: Date.now() + Math.random() * 2,\n      title: name,\n      cards: [],\n    });\n    setBoards(tempBoardsList);\n  };\n\n  const removeBoard = (boardId: number) => {\n    const boardIndex = boards.findIndex((item: IBoard) => item.id === boardId);\n    if (boardIndex < 0) return;\n\n    const tempBoardsList = [...boards];\n    tempBoardsList.splice(boardIndex, 1);\n    setBoards(tempBoardsList);\n  };\n\n  const addCardHandler = (boardId: number, title: string) => {\n    const boardIndex = boards.findIndex((item: IBoard) => item.id === boardId);\n    if (boardIndex < 0) return;\n\n    const tempBoardsList = [...boards];\n    tempBoardsList[boardIndex].cards.push({\n      id: Date.now() + Math.random() * 2,\n      title,\n      labels: [],\n      date: \"\",\n      tasks: [],\n      desc: \"\",\n    });\n    setBoards(tempBoardsList);\n  };\n\n  const removeCard = (boardId: number, cardId: number) => {\n    const boardIndex = boards.findIndex((item: IBoard) => item.id === boardId);\n    if (boardIndex < 0) return;\n\n    const tempBoardsList = [...boards];\n    const cards = tempBoardsList[boardIndex].cards;\n\n    const cardIndex = cards.findIndex((item) => item.id === cardId);\n    if (cardIndex < 0) return;\n\n    cards.splice(cardIndex, 1);\n    setBoards(tempBoardsList);\n  };\n\n  const updateCard = (boardId: number, cardId: number, card: ICard) => {\n    const boardIndex = boards.findIndex((item) => item.id === boardId);\n    if (boardIndex < 0) return;\n\n    const tempBoardsList = [...boards];\n    const cards = tempBoardsList[boardIndex].cards;\n\n    const cardIndex = cards.findIndex((item) => item.id === cardId);\n    if (cardIndex < 0) return;\n\n    tempBoardsList[boardIndex].cards[cardIndex] = card;\n\n    setBoards(tempBoardsList);\n  };\n\n  const onDragEnd = (boardId: number, cardId: number) => {\n    const sourceBoardIndex = boards.findIndex(\n      (item: IBoard) => item.id === boardId,\n    );\n    if (sourceBoardIndex < 0) return;\n\n    const sourceCardIndex = boards[sourceBoardIndex]?.cards?.findIndex(\n      (item) => item.id === cardId,\n    );\n    if (sourceCardIndex < 0) return;\n\n    const targetBoardIndex = boards.findIndex(\n      (item: IBoard) => item.id === targetCard.boardId,\n    );\n    if (targetBoardIndex < 0) return;\n\n    const targetCardIndex = boards[targetBoardIndex]?.cards?.findIndex(\n      (item) => item.id === targetCard.cardId,\n    );\n    if (targetCardIndex < 0) return;\n\n    const tempBoardsList = [...boards];\n    const sourceCard = tempBoardsList[sourceBoardIndex].cards[sourceCardIndex];\n    tempBoardsList[sourceBoardIndex].cards.splice(sourceCardIndex, 1);\n    tempBoardsList[targetBoardIndex].cards.splice(\n      targetCardIndex,\n      0,\n      sourceCard,\n    );\n    setBoards(tempBoardsList);\n\n    setTargetCard({\n      boardId: 0,\n      cardId: 0,\n    });\n  };\n\n  const onDragEnter = (boardId: number, cardId: number) => {\n    if (targetCard.cardId === cardId) return;\n    setTargetCard({\n      boardId: boardId,\n      cardId: cardId,\n    });\n  };\n\n  useEffect(() => {\n    updateLocalStorageBoards(boards);\n  }, [boards]);\n  return (\n    <div className=\"app\">\n      <div className=\"app-nav\">\n        <h1>Trello Kanban Board</h1>\n      </div>\n      <div className=\"app-boards-container\">\n        <div className=\"app-boards\">\n          {boards.map((item) => (\n            <Board\n              key={item.id}\n              board={item}\n              addCard={addCardHandler}\n              removeBoard={() => removeBoard(item.id)}\n              removeCard={removeCard}\n              onDragEnd={onDragEnd}\n              onDragEnter={onDragEnter}\n              updateCard={updateCard}\n            />\n          ))}\n          <div className=\"app-boards-last\">\n            <CustomInput\n              displayClass=\"app-boards-add-board\"\n              editClass=\"app-boards-add-board-edit\"\n              placeholder=\"Enter Board Name\"\n              text=\"Add Board\"\n              buttonText=\"Add Board\"\n              onSubmit={addboardHandler}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}